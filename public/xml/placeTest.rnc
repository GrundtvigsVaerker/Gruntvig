# placeTest.rnc
# Kim Steen Ravn:
# 2011.02.16 (rnc til place)

datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"
namespace ns1 = "http://www.tei-c.org/ns/1.0"

include "tei_all.rnc" {

# (TEI Header): supplies the descriptive and declarative information making up an electronic title page prefixed to every TEI-conformant text
teiHeader =
   element ns1:teiHeader {   
      # (file description): contains a title for any kind of work
      element ns1:fileDesc {
         element ns1:titleStmt { 
         element ns1:title { 
            attribute type { xsd:string { pattern="place.xml" } },
         text },
         element ns1:author { text },
         element ns1:editor {
            attribute role { xsd:Name { pattern="centerManager|editor|editionManager|editionPhilologist|itManager|student"}},
         text } *,
         empty },
         element ns1:editionStmt {
         # (edition statement):
            element ns1:edition { text } *,
         empty },
         element ns1:extent { text },
         element ns1:publicationStmt {
         # (publications statement): contains the name(s) of the author(s)
            element ns1:publisher { text },
            element ns1:distributor { text },
            element ns1:authority { text } ?,
            element ns1:idno { 
               attribute type { xsd:string {pattern="([0-9]{4}_[0-9]{4}[A-Z]|[0-9]{4}_[0-9]{3}[A-Z]|[0-9]{4}_[0-9]{2}[A-Z]|[0-9]{4}_[0-9][A-Z]|[0-9]{4}_[0-9]{4}|[0-9]{4}_[0-9]{3}|[0-9]{4}_[0-9]{2}|[0-9]{4}_[0-9])_txt.xml"} },
            text } *,
            element ns1:date {
               attribute type { xsd:date },
            text },
         empty },         
         element ns1:seriesStmt {
         # (serie statement):
            element ns1:title { text } ?,
            element ns1:idno { 
               attribute type { xsd:string } ?,
            text } ?,
            element ns1:respStmt { 
               element ns1:name { text } ?,
               element ns1:resp { text } ?,
            empty } ?,
         empty } ?,
         
# metadata begynder
#
#         element ns1:notesStmt {
#         # (note statement):
#            element ns1:note { text } *,
#          empty },
#          
# metadata slut

         element ns1:sourceDesc {
         # (source description): describes the source from which an electronic text was derived or generated
         # GV: uformateret transskription af titelbladet
            element ns1:bibl { 
            biblContent },
         empty },
      empty },
      element ns1:encodingDesc {
         element ns1:projectDesc {
            element ns1:p { text } *,
         empty } *,
         element ns1:editorialDecl {
            attribute xml:id { xsd:ID {pattern="comGuideLines|typoGuideLines|txtGuideLines|xmlGuideLines"}},
            attribute n { xsd:string {pattern="[0-9].[0-9]"}}, 
         text } *,
      empty },
      # (revision description): summarizes the revision history for a file
      element ns1:revisionDesc { 
         element ns1:change { 
            attribute xml:id { xsd:ID { pattern="ELR|HY|JEL|KSG|KSR|RSB|VAP"}}?,
            attribute who { xsd:string { pattern="ELR|HY|JEL|KSG|KSR|RSB|VAP"}},
            attribute when { xsd:date },
         text } *,
      text }     
}

body =
   # (text body) contains the whole body of a single unitary text
   element ns1:body {
     element ns1:div { 
        element ns1:head { text },
        element ns1:table {
           element ns1:row {
              attribute xml:id { xsd:ID { pattern="fak[0-9]+|fik[0-9]+" } },
                 element ns1:cell {
                    attribute type { xsd:string { pattern="norm" } },
                 text },
                 element ns1:cell {
                    attribute type { xsd:string { pattern="place" } },
                 text } ?,
           empty } *,
        empty },
     empty } *,
   empty }
}

# content: 

biblContent =
   element ns1:title {
   text } &
   element ns1:author {
      element ns1:note {
      text } ? &
   text } &
   element ns1:lb {
   empty } ? &
   element ns1:pubPlace {
   text } &
   element ns1:publisher {
      element ns1:note {
      text } * &
   text } &
   element ns1:date {
   text }

teiHeaderContent =
   element ns1:lb {
   teiHeaderContent } * &
   text