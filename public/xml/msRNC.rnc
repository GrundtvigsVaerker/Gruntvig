# msTest.rnc
# Kim Steen Ravn: 2011.02.23 (); 2011.02.22 (app, add)

datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"
namespace ns1 = "http://www.tei-c.org/ns/1.0"

include "tei_all.rnc" {

# (TEI Header): supplies the descriptive and declarative information making up an electronic title page prefixed to every TEI-conformant text
teiHeader =
   element ns1:teiHeader {   
      # (file description): contains a title for any kind of work
      element ns1:fileDesc {
         element ns1:titleStmt { 
         element ns1:title {  
            attribute type { xsd:string { pattern="main|part" } }, 
            attribute key { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_txt.xml" } },
         text },
         element ns1:title { 
            attribute rend { xsd:string { pattern="shortForm" } },
         text },
         element ns1:author { 
         xsd:string { pattern="Nicolai Frederik Severin Grundtvig" } } ,
         element ns1:editor {
            attribute role { xsd:Name { pattern="editionPhilologist"}}, 
         xsd:string { pattern="Holger Berg|Niels W. Bruun|Vibeke A. Pedersen|Krista Stinne Greve Rasmussen|Kim Steen Ravn|Else Riisager|Vanja Thaulow|Henrik Yde" } } *,
         element ns1:editor {
            attribute role { xsd:Name { pattern="editor"}}, 
         xsd:string { pattern="Holger Berg|Johnny Kondrup|Vibeke A. Pedersen|Kim Steen Ravn|Else Riisager|Vanja Thaulow|Henrik Yde" } } *,
         element ns1:editor {
            attribute role { xsd:Name { pattern="student"}}, 
         xsd:string { pattern="Jesper Lorenzen|Rebekka Sofie Bohse Meyer|Johanne Marie N[ø]rrelund Rasmussen|Frederik Drei[ø]e Seidelin" } } *,
#         element ns1:editor {
#            attribute role { xsd:Name { pattern="centerManager"}}, 
#         xsd:string { pattern="Michael Schelde" } } *,
#        element ns1:editor {
#            attribute role { xsd:Name { pattern="editionManager"}}, 
#         xsd:string { pattern="Johnny Kondrup" } } *,
#         element ns1:editor {
#            attribute role { xsd:Name { pattern="itManager"}}, 
#         xsd:string { pattern="Kim Steen Ravn" } } *,
         empty },
         element ns1:editionStmt {
         # (edition statement):
            element ns1:edition { xsd:string { pattern="Version [0-9].[0-9]|prøveversion" } } *,
         empty },
         element ns1:extent { xsd:string { pattern="[0-9]+ KB" } },
         element ns1:noteStmt {
            element ns1:note { 
               attribute target { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_txt.xml" } },
               attribute type { xsd:string { pattern="txt" } },
            xsd:string { pattern="L[æ]setekst" } },
            element ns1:note { 
               attribute target { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_com.xml" } },
               attribute type { xsd:string { pattern="com" } }, 
            xsd:string { pattern="Punktkommentar" } },
            element ns1:note { 
               attribute target { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_intro.xml" } },
               attribute type { xsd:string { pattern="intro" } }, 
            xsd:string { pattern="Indledning" } } ?,
            element ns1:note { 
               attribute target { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_txr.xml" } },
               attribute type { xsd:string { pattern="txr" } }, 
            xsd:string { pattern="Tekstredeg[ø]relse" } },
            element ns1:note { 
               attribute target { xsd:string { pattern="18[0-9]{2}_([0-9]+|[0-9]+[A-Z])_ms[0-9]+.xml" } },
               attribute type { xsd:string { pattern="var" } },
               attribute xml:id { xsd:ID { pattern="thisFile" } }, 
            xsd:string { pattern="Manuskript" } } ?,
         empty },
         element ns1:publicationStmt {
         # (publications statement): contains the name(s) of the author(s)
            element ns1:publisher { text },
            element ns1:distributor { text },
            element ns1:authority { text } ?,
            element ns1:idno { 
               attribute type { xsd:string {pattern="([0-9]{4}_[0-9]{4}[A-Z]|[0-9]{4}_[0-9]{3}[A-Z]|[0-9]{4}_[0-9]{2}[A-Z]|[0-9]{4}_[0-9][A-Z]|[0-9]{4}_[0-9]{4}|[0-9]{4}_[0-9]{3}|[0-9]{4}_[0-9]{2}|[0-9]{4}_[0-9])_ms.xml"} },
            text } *,
            element ns1:date {
               attribute type { xsd:date },
            text },
         empty },

# metadata: begynd

#         element ns1:notesStmt {
#         # (note statement):
#            element ns1:note { 
#               attribute xml:id { xsd:ID {pattern="genre"} },
#            text } *,
#            element ns1:note { 
#               attribute xml:id { xsd:ID {pattern="topic"} },
#            text } *,
#            element ns1:note { 
#               attribute xml:id { xsd:ID {pattern="content"} },
#            text } *,
#          empty },

# metadata: slut

         element ns1:sourceDesc {
         # (source description): describes the source from which an electronic text was derived or generated
         # GV: uformateret transskription af titelbladet
            element ns1:bibl { 
            ( text & biblContent ) },
         empty },
      empty },
      element ns1:encodingDesc {
         element ns1:projectDesc {
            element ns1:p { text } *,
         empty } *,
         element ns1:editorialDecl {
            attribute xml:id { xsd:ID {pattern="comGuideLines.xml|introGuideLines.xml|msGuideLines.xml|typoGuideLines.xml|txrGuideLines.xml|txtGuideLines.xml|xmlGuideLines.xml"}},
            attribute n { xsd:string {pattern="[0-9].[0-9]"}}, 
         text } *,
      empty },
      # (revision description): summarizes the revision history for a file
      element ns1:revisionDesc { 
         element ns1:change { 
            attribute xml:id { xsd:ID { pattern="ELR|HY|JEL|KSG|KSR|RSB|VAP"}}?,
            attribute who { xsd:string { pattern="ELR|HY|JEL|KSG|KSR|RSB|VAP"}},
            attribute when { xsd:date },
         text } *,
      text }     
}

body =
   # (text body) contains the whole body of a single unitary text
   element ns1:body {
     element ns1:div {        
        attribute xml:id { xsd:ID { pattern="ms18[0-9]{2}_[0-9]{3}[A-Z]_ms[0-9]+.xml" } },
     ( divContent & pContent & pbContent ) } *,
   empty }
}

# content:

appContent =
   element ns1:app {
      attribute type { xsd:string { pattern="ms" } } &
      element ns1:lem {
         attribute hand { xsd:string { pattern="doubt" } } ? &
         attribute rendition { xsd:string { pattern="leftMargin|rightMargin" } } ? &
         attribute type { xsd:string { pattern="add|immediate|firstDel|seconDdel" } } ? &
      pContent  } * &
      element ns1:rdg {
         element ns1:add {
            attribute type { xsd:string { pattern="firstDel|later|secondDel|shading" } } &
            attribute hand { xsd:string { pattern="doubt" } } ? &
         pContent } ? &
         element ns1:del {
            attribute type { xsd:string { pattern="firstDel|immediate|secondDel|shading" } } ? &
            attribute hand { xsd:string { pattern="doubt" } } ? &
         pContent } * &
         element ns1:app {
            attribute type { xsd:string { pattern="ms" } } &
            element ns1:lem {
               attribute type { xsd:string { pattern="add" } } ? &
               attribute hand { xsd:string { pattern="doubt" } } ? &            
            pContent } ? &
            element ns1:rdg {            
            pContent } * &
         pContent } ? &
      empty } * &
   ( empty & pContent ) } *

divContent =
   element ns1:head {
      attribute rend { xsd:string {pattern="left|right"} } ?,
      attribute n { n_type },
   pContent } *

graphicContent =
   element ns1:fw {
      attribute type { xsd:string {pattern="shortLine|longLine"} },
   empty } ?
   
docImprintContent =
   element ns1:pubPlace {
   docImprintContent } ?

teiHeaderContent =
   element ns1:lb {
   teiHeaderContent } * &
   text

biblContent =
   element ns1:title {
      attribute type { xsd:string { pattern="katalogsignatur" } },
   ( text & lbContent * ) } &
   element ns1:author {
      element ns1:note {
      text } ? &
   ( text & lbContent * ) } &
   element ns1:lb {
   empty } ?

fwContent =
   element ns1:fw {
      attribute type { xsd:string {pattern="shortLine|longLine"} },
   empty } ?

headContent =
   element ns1:head { 
      attribute rend { xsd:string {pattern="center|left|right"} } ?,
      attribute n { n_type } ?,
   headContent } *

lgContent =
   element ns1:lg {
      attribute n { xsd:string {pattern="[0-9]+"} },
      element ns1:l { pContent } * ,
      element ns1:app {
      empty } ? ,
    pContent } *

lbContent =
   element ns1:lb {
   empty } ?

pbContent =
      element ns1:pb {
         ((attribute facs { xsd:string {pattern="18[0-9]{2}_[0-9]{3}[A-Z]_fax[0-9]+.jpg|18[0-9]{2}_[0-9]{3}_fax[0-9]+.jpg|18[0-9]{2}_[0-9]{2}_fax[0-9]+.jpg"} } &
         attribute n { xsd:string { pattern="[0-9]+|[iIvVxX]*" } } ? &
         attribute rend { xsd:string { pattern="supp" } } ? &
         attribute type { xsd:string { pattern="ms" } } ) 
         |
         (attribute ed { xsd:string { pattern="A|A.[0-9]+" } } &
         attribute n { xsd:string { pattern="[0-9]+|[iIvVxX]*" } } ? &
         attribute rend { xsd:string { pattern="supp" } } ? &
         attribute type { xsd:string { pattern="text" } } )
         |
         (attribute n { xsd:string { pattern="[0-9]+|[iIvVxX]*" } } &
         attribute ed { xsd:string { pattern="GSV|PS|SS|SV|VU|US" } } &
         attribute type { xsd:string {pattern="edition"} } ? )
         |
         (attribute facs { xsd:string {pattern="18[0-9]{2}_[0-9]{3}[A-Z]_fax[0-9]+.jpg|18[0-9]{2}_[0-9]{3}_fax[0-9]+.jpg|18[0-9]{2}_[0-9]{2}_fax[0-9]+.jpg"} } &
         attribute type { xsd:string {pattern="periText"} } )),
      empty } *

pContent =
   element ns1:del {
      attribute type { xsd:string { pattern="firstDel|immediate|secondDel|shading" } } &
   pContent } * &
   element ns1:docAuthor {
      attribute n { n_type } ?,
   pContent } ? &
   element ns1:fw {
      attribute type { xsd:string {pattern="shortLine|longLine"} },
   empty } ? &
   element ns1:hi {
      attribute rend { xsd:string {pattern="underLine|dobbleUnderLine"} } ?,
      attribute facs { xsd:string { pattern="doubt" } } ?,
   pContent } * &
   element ns1:lb {
   empty } * &
   element ns1:lg {
      attribute n { xsd:string {pattern="[0-9]+"} } &
      element ns1:l {
      ( pContent & pbContent ) } * &
   empty } * &
   (element ns1:note {
      attribute type { xsd:string {pattern="footnote|margin|supp"} } ?,
   pContent } ?
   |
   (element ns1:note {
      attribute type { xsd:string {pattern="sic"} } ?,
   empty })) * &
   element ns1:p {
      attribute rend { xsd:string {pattern="center|left|right"} } ?,
      attribute rendition { rendition_type } ?,
   ( pContent & pbContent ) } * &
   element ns1:ref {
      attribute n {xsd:string {pattern="anc[0-9]+|bib[0-9]+|com[0-9]+|intro[0-9]+|txr[0-9]+|txt[0-9]+"}},
      attribute target {xsd:string } ?,
   pContent } * & 
   element ns1:rs {
     attribute key {key_type} &
   ( pContent & pbContent ) } * &
   element ns1:title {
     attribute key {xsd:string },
   attribute type { xsd:string },
   pContent } * &
   ( text & appContent )

#rendContent =
#   attribute rend { xsd:string { pattern="center|left|right" } }
# kan det lade sig gøre; se key nederst

key_type = xsd:string { pattern="1 Mos [0-9]+,[0-9]+|2 Mos [0-9]+,[0-9]+|3 Mos [0-9]+,[0-9]+|4 Mos [0-9]+,[0-9]+|5 Mos [0-9]+,[0-9]+|Jos [0-9]+,[0-9]+|Dom [0-9]+,[0-9]+|Ruth [0-9]+,[0-9]+|1 Sam [0-9]+,[0-9]+|2 Sam [0-9]+,[0-9]+|1 Kong [0-9]+,[0-9]+|2 Kong [0-9]+,[0-9]+|1 Krøn [0-9]+,[0-9]+|2 Krøn [0-9]+,[0-9]+|Ez [0-9]+,[0-9]+|Neh [0-9]+,[0-9]+|Est [0-9]+,[0-9]+|Job [0-9]+,[0-9]+|Sl [0-9]+,[0-9]+|Ordsp [0-9]+,[0-9]+|Præd [0-9]+,[0-9]+|Højs [0-9]+,[0-9]+|Es [0-9]+,[0-9]+|Jer [0-9]+,[0-9]+|Klages [0-9]+,[0-9]+|Ez [0-9]+,[0-9]+|Dan [0-9]+,[0-9]+|Hos [0-9]+,[0-9]+|Joel [0-9]+,[0-9]+|Am [0-9]+,[0-9]+|Obad [0-9]+,[0-9]+|Jon [0-9]+,[0-9]+|Mika [0-9]+,[0-9]+|Nah [0-9]+,[0-9]+|Hab [0-9]+,[0-9]+|Sef [0-9]+,[0-9]+|Hagg [0-9]+,[0-9]+|Zak [0-9]+,[0-9]+|Mal [0-9]+,[0-9]+|Matt [0-9]+,[0-9]+|Mark [0-9]+,[0-9]+|Luk [0-9]+,[0-9]+|Joh [0-9]+,[0-9]+|ApG [0-9]+,[0-9]+|Rom [0-9]+,[0-9]+|1 Kor [0-9]+,[0-9]+|2 Kor [0-9]+,[0-9]+|Gal [0-9]+,[0-9]+|Ef [0-9]+,[0-9]+|Fil [0-9]+,[0-9]+|Kol [0-9]+,[0-9]+|1 Thess [0-9]+,[0-9]+|2 Thess [0-9]+,[0-9]+|1 Tim [0-9]+,[0-9]+|2 Tim [0-9]+,[0-9]+|Tit [0-9]+,[0-9]+|Filem [0-9]+,[0-9]+|Hebr [0-9]+,[0-9]+|Jak [0-9]+,[0-9]+|1 Pet [0-9]+,[0-9]+|2 Pet [0-9]+,[0-9]+|1 Joh [0-9]+,[0-9]+|2 Joh [0-9]+,[0-9]+|3 Joh [0-9]+,[0-9]+|Jud [0-9]+,[0-9]+|Åb [0-9]+,[0-9]+| [0-9]+,[0-9]+|1 Mos [0-9]+,[0-9]+-[0-9]+|2 Mos [0-9]+,[0-9]+-[0-9]+|3 Mos [0-9]+,[0-9]+-[0-9]+|4 Mos [0-9]+,[0-9]+-[0-9]+|5 Mos [0-9]+,[0-9]+-[0-9]+|Jos [0-9]+,[0-9]+-[0-9]+|Dom [0-9]+,[0-9]+-[0-9]+|Ruth [0-9]+,[0-9]+-[0-9]+|1 Sam [0-9]+,[0-9]+-[0-9]+|2 Sam [0-9]+,[0-9]+-[0-9]+|1 Kong [0-9]+,[0-9]+-[0-9]+|2 Kong [0-9]+,[0-9]+-[0-9]+|1 Krøn [0-9]+,[0-9]+-[0-9]+|2 Krøn [0-9]+,[0-9]+-[0-9]+|Ez [0-9]+,[0-9]+-[0-9]+|Neh [0-9]+,[0-9]+-[0-9]+|Est [0-9]+,[0-9]+-[0-9]+|Job [0-9]+,[0-9]+-[0-9]+|Sl [0-9]+,[0-9]+-[0-9]+|Ordsp [0-9]+,[0-9]+-[0-9]+|Præd [0-9]+,[0-9]+-[0-9]+|Højs [0-9]+,[0-9]+-[0-9]+|Es [0-9]+,[0-9]+-[0-9]+|Jer [0-9]+,[0-9]+-[0-9]+|Klages [0-9]+,[0-9]+-[0-9]+|Ez [0-9]+,[0-9]+-[0-9]+|Dan [0-9]+,[0-9]+-[0-9]+|Hos [0-9]+,[0-9]+-[0-9]+|Joel [0-9]+,[0-9]+-[0-9]+|Am [0-9]+,[0-9]+-[0-9]+|Obad [0-9]+,[0-9]+-[0-9]+|Jon [0-9]+,[0-9]+-[0-9]+|Mika [0-9]+,[0-9]+-[0-9]+|Nah [0-9]+,[0-9]+-[0-9]+|Hab [0-9]+,[0-9]+-[0-9]+|Sef [0-9]+,[0-9]+-[0-9]+|Hagg [0-9]+,[0-9]+-[0-9]+|Zak [0-9]+,[0-9]+-[0-9]+|Mal [0-9]+,[0-9]+-[0-9]+|Matt [0-9]+,[0-9]+-[0-9]+|Mark [0-9]+,[0-9]+-[0-9]+|Luk [0-9]+,[0-9]+-[0-9]+|Joh [0-9]+,[0-9]+-[0-9]+|ApG [0-9]+,[0-9]+-[0-9]+|Rom [0-9]+,[0-9]+-[0-9]+|1 Kor [0-9]+,[0-9]+-[0-9]+|2 Kor [0-9]+,[0-9]+-[0-9]+|Gal [0-9]+,[0-9]+-[0-9]+|Ef [0-9]+,[0-9]+-[0-9]+|Fil [0-9]+,[0-9]+-[0-9]+|Kol [0-9]+,[0-9]+-[0-9]+|1 Thess [0-9]+,[0-9]+-[0-9]+|2 Thess [0-9]+,[0-9]+-[0-9]+|1 Tim [0-9]+,[0-9]+-[0-9]+|2 Tim [0-9]+,[0-9]+-[0-9]+|Tit [0-9]+,[0-9]+-[0-9]+|Filem [0-9]+,[0-9]+-[0-9]+|Hebr [0-9]+,[0-9]+-[0-9]+|Jak [0-9]+,[0-9]+-[0-9]+|1 Pet [0-9]+,[0-9]+-[0-9]+|2 Pet [0-9]+,[0-9]+-[0-9]+|1 Joh [0-9]+,[0-9]+-[0-9]+|2 Joh [0-9]+,[0-9]+-[0-9]+|3 Joh [0-9]+,[0-9]+-[0-9]+|Jud [0-9]+,[0-9]+-[0-9]+|Åb [0-9]+,[0-9]+-[0-9]+| [0-9]+,[0-9]+-[0-9]+|1 Mos [0-9]|2 Mos [0-9]|3 Mos [0-9]|4 Mos [0-9]|5 Mos [0-9]|Jos [0-9]|Dom [0-9]|Ruth [0-9]|1 Sam [0-9]|2 Sam [0-9]|1 Kong [0-9]|2 Kong [0-9]|1 Krøn [0-9]|2 Krøn [0-9]|Ez [0-9]|Neh [0-9]|Est [0-9]|Job [0-9]|Sl [0-9]|Ordsp [0-9]|Præd [0-9]|Højs [0-9]|Es [0-9]|Jer [0-9]|Klages [0-9]|Ez [0-9]|Dan [0-9]|Hos [0-9]|Joel [0-9]|Am [0-9]|Obad [0-9]|Jon [0-9]|Mika [0-9]|Nah [0-9]|Hab [0-9]|Sef [0-9]|Hagg [0-9]|Zak [0-9]|Mal [0-9]|Matt [0-9]|Mark [0-9]|Luk [0-9]|Joh [0-9]|ApG [0-9]|Rom [0-9]|1 Kor [0-9]|2 Kor [0-9]|Gal [0-9]|Ef [0-9]|Fil [0-9]|Kol [0-9]|1 Thess [0-9]|2 Thess [0-9]|1 Tim [0-9]|2 Tim [0-9]|Tit [0-9]|Filem [0-9]|Hebr [0-9]|Jak [0-9]|1 Pet [0-9]|2 Pet [0-9]|1 Joh [0-9]|2 Joh [0-9]|3 Joh [0-9]|Jud [0-9]|Åb [0-9]"}

n_type = xsd:string { pattern="5|4|3|2|1|0|-1|-2" }

rendition_type = xsd:string { pattern="spaceOne|spaceTwo" } 